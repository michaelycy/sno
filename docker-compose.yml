version: '3'
services:
  postgres:
    image: postgres:12
    restart: always
    container_name: postgres-db
    hostname: postgresql
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready']
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5432:5432
    volumes:
      - ./postgres/data:/var/lib/postgresql/data
    environment:
      TZ: Asia/Shanghai
      LANG: C.UTF-8
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonarQWE123
      POSTGRES_DB: sonar
    networks:
      - sonar-network

  sonar:
    image: sonarqube:9-community
    restart: always
    hostname: sonar
    container_name: sonar-web
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./sonarqube/conf:/opt/sonarqube/conf
      - ./sonarqube/data:/opt/sonarqube/data
      - ./sonarqube/extensions:/opt/sonarqube/extensions
      - ./sonarqube-community-branch-plugin-1.14.0.jar:/opt/sonarqube/extensions/plugins/sonarqube-community-branch-plugin.jar
    ports:
      - 9001:9000
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://postgres:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonarQWE123
    networks:
      - sonar-network

networks:
  sonar-network:
    driver: bridge


# services:
#   sonarqube:
#     image: sonarqube:community
#     hostname: sonarqube
#     container_name: sonarqube
#     read_only: true
#     depends_on:
#       db:
#         condition: service_healthy
#     environment:
#       SONAR_JDBC_URL: jdbc:postgresql://db:5432/sonar
#       SONAR_JDBC_USERNAME: sonar
#       SONAR_JDBC_PASSWORD: sonar
#     volumes:
#       - sonarqube_data:/opt/sonarqube/data
#       - sonarqube_extensions:/opt/sonarqube/extensions
#       - sonarqube_logs:/opt/sonarqube/logs
#       - sonarqube_temp:/opt/sonarqube/temp
#     ports:
#       - "9000:9000"
#     networks:
#       - ${NETWORK_TYPE:-ipv4}
#   db:
#     image: postgres:15
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready"]
#       interval: 10s
#       timeout: 5s
#       retries: 5
#     hostname: postgresql
#     container_name: postgresql
#     environment:
#       POSTGRES_USER: sonar
#       POSTGRES_PASSWORD: sonar
#       POSTGRES_DB: sonar
#     volumes:
#       - postgresql:/var/lib/postgresql
#       - postgresql_data:/var/lib/postgresql/data
#     networks:
#       - ${NETWORK_TYPE:-ipv4}

# volumes:
#   sonarqube_data:
#   sonarqube_temp:
#   sonarqube_extensions:
#   sonarqube_logs:
#   postgresql:
#   postgresql_data:

# networks:
#   ipv4:
#     driver: bridge
#     enable_ipv6: false
#   dual:
#     driver: bridge
#     enable_ipv6: true
#     ipam:
#       config:
#         - subnet: "192.168.2.0/24"
#           gateway: "192.168.2.1"
#         - subnet: "2001:db8:2::/64"
#           gateway: "2001:db8:2::1"